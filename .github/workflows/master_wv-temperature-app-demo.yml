name: Build and deploy Node.js app to Azure Web App - wv-temperature-app-demo

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      
      - name: Install root dependencies
        run: |
          pwd
          ls
          npm install
          ls

      - name: Install Frontend and Backend Dependencies
        run: |
          pwd
          ls
          npm install --prefix frontend
          npm install --prefix backend
          ls

      - name: Build Frontend
        run: |
          pwd
          ls
          npm run build --prefix frontend
          ls

      - name: Prepare Deployment Package
        run: |
          pwd
          ls
          mkdir -p deploy/frontend deploy/backend deploy/node_modules
          cp -r frontend/build/* deploy/frontend/
          cp -r backend/* deploy/backend/
          cp backend/package.json deploy/backend/
          cp -r node_modules/* deploy/node_modules
          cp package.json deploy/
          ls
        shell: bash

      - name: Verify Deployment Package
        # Debugging step to verify contents of deploy directory
        run: |
          echo "Contents of deploy folder:"
          ls deploy
        shell: bash

      - name: Upload Artifact for Deployment
        uses: actions/upload-artifact@v4
        with:
          name: deployment-artifact
          path: deploy

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      # Specifies the environment to be used (this shows up in GitHub's Environment settings).
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
      # Uses the output of the deploy step to set the URL for the environment.
    permissions:
      id-token: write #This is required for requesting the JWT
      
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: deployment-artifact
      
      - name: List contents of working directory
        run: |
          pwd
          ls -lah
          mkdir -p deploy
        
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_E14B64B4821943829551D75DAF758B50 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_9EE60D59C11946DEA7F7B011B51A36D4 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_40D520A4031A4DB3881C03B52C7986F7 }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'wv-temperature-app-demo'
          package: .

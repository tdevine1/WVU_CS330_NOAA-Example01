# Documentation for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - wv-temperature-app-demo
# Name of the workflow. This appears in GitHub's Actions tab.

on:
  push:
    branches:
      - master
      # The workflow triggers when code is pushed to the master branch.
  workflow_dispatch:
    # Allows the workflow to be triggered manually from GitHub's Actions tab.

jobs:
  build:
    runs-on: ubuntu-latest
    # Specifies that the build job will run on the latest Ubuntu runner.

    steps:
      - uses: actions/checkout@v4
        # Checks out the repository code so the workflow can work with it.

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          # Specifies the version of Node.js to use for the build.

      - name: npm install, build, and test
        # Runs the necessary npm commands to install dependencies and build the app
        run: |
          npm install
          npm run install:frontend
          npm run install:backend
          npm run build --prefix frontend

      - name: Zip artifact for deployment
        # Zips the build output into a file called `release.zip` for deployment.
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        # Uploads the zipped artifact for the deployment job to use.
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    # Specifies that the deployment job will run on the latest Ubuntu runner.
    needs: build
    # Indicates this job depends on the completion of the `build` job.

    environment:
      name: 'Production'
      # Specifies the environment to be used (this shows up in GitHub's Environment settings).
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
      # Uses the output of the deploy step to set the URL for the environment.

    permissions:
      id-token: write
      # Required permission for generating a token to authenticate with Azure.

    steps:
      - name: Download artifact from build job
        # Downloads the zipped artifact generated by the build job.
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        # Unzips the artifact so it can be deployed.
        run: unzip release.zip
      
      - name: Login to Azure
        # Logs in to Azure using credentials stored in GitHub Secrets.
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_E14B64B4821943829551D75DAF758B50 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_9EE60D59C11946DEA7F7B011B51A36D4 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_40D520A4031A4DB3881C03B52C7986F7 }}

      - name: 'Deploy to Azure Web App'
        # Deploys the app to the Azure Web App.
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'wv-temperature-app-demo'
          # The name of the Azure Web App to deploy to.
          slot-name: 'Production'
          # Specifies the deployment slot (default is `Production`).
          package: ./frontend/build
          # Specifies the current directory (unzipped contents) as the deployment package.
